# To consume this file (once only) in a Python program: 
 
#     from past.builtins import execfile 
#     execfile ('test_A00.py') 
 
# Start of gDS include file ...
 
from multiprocessing import Manager 
gDSMgr = Manager() 
 
gTest = gDSMgr.list() 
gTest.append("MyValue") 
 
# 
# Define global shared variables for table gCounty 
# 
gCounty_Name = gDSMgr.list() 
 
# 
# Define global shared variables for table gFarm 
# 
gFarm_Name = gDSMgr.list() 
gFarm_Name2Index = gDSMgr.dict() 
gFarm_gCounty_Index = gDSMgr.list() 
gFarm_RowStatus = gDSMgr.list() 
 
# 
# Define global shared variables for table gAnimal 
# 
gAnimal_gFarm_Index = gDSMgr.list() 
gAnimal_Type = gDSMgr.list() 
gAnimal_Name = gDSMgr.list() 
gAnimal_RowStatus = gDSMgr.list() 

# 
# Add a row to table gCounty WITHOUT a lock 
# 
def gCounty_AddARow(\
    _Name = None,\
): 
    gCounty_Name.append(_Name) 
    thisIndex = len(gCounty_Name) - 1 
    return (thisIndex) 

# 
# Add a row to table gFarm (using locker = MasterLock) 
# 
def gFarm_AddARowUnderLock(\
    _Name = None,\
    _gCounty_Index = None,\
    _RowStatus = None,\
): 
    MasterLock('lock') 
    gFarm_Name.append(_Name) 
    gFarm_gCounty_Index.append(_gCounty_Index) 
    gFarm_RowStatus.append(_RowStatus) 
    thisIndex = len(gFarm_RowStatus) - 1 
    if _Name in gFarm_Name2Index: 
        print ('Name value = ', _Name) 
        x = 1/0 # Dup row added (Name above) in table gFarm 
    gFarm_Name2Index[_Name] = thisIndex 

    MasterLock('unlock') 
    return (thisIndex) 

# 
# Add a row to table gAnimal (using locker = MasterLock) 
# 
def gAnimal_AddARowUnderLock(\
    _gFarm_Index = None,\
    _Type = None,\
    _Name = None,\
    _RowStatus = "",\
): 
    MasterLock('lock') 
    gAnimal_gFarm_Index.append(_gFarm_Index) 
    gAnimal_Type.append(_Type) 
    gAnimal_Name.append(_Name) 
    gAnimal_RowStatus.append(_RowStatus) 
    thisIndex = len(gAnimal_RowStatus) - 1 
    MasterLock('unlock') 
    return (thisIndex) 

# 
# Delete erased rows in table gFarm (using locker = MasterLock) 
# Note - this procedure must be written as is because of Python/multiprocessing issues! 
# 
def gFarm_CompressTableUnderLock(): 

    MasterLock('lock') 

    _Name = [] 
    _gCounty_Index = [] 
    _RowStatus = [] 

    for tableIndex in range(len(gFarm_RowStatus)): 
        if gFarm_RowStatus[tableIndex] is not None: 
            _Name.append(gFarm_Name[tableIndex]) 
            _gCounty_Index.append(gFarm_gCounty_Index[tableIndex]) 
            _RowStatus.append(gFarm_RowStatus[tableIndex]) 
        else: 
            del gFarm_Name2Index[gFarm_Name[tableIndex]] 

    del gFarm_Name[:] 
    del gFarm_gCounty_Index[:] 
    del gFarm_RowStatus[:] 

    for tableIndex in range(len(_RowStatus)): 
        gFarm_Name.append(_Name[tableIndex]) 
        gFarm_gCounty_Index.append(_gCounty_Index[tableIndex]) 
        gFarm_RowStatus.append(_RowStatus[tableIndex]) 

    for tableIndex in range(len(gFarm_RowStatus)): 
        gFarm_Name2Index[gFarm_Name[tableIndex]] = tableIndex 

    MasterLock('unlock') 

    return 

# 
# Delete erased rows in table gAnimal (using locker = MasterLock) 
# Note - this procedure must be written as is because of Python/multiprocessing issues! 
# 
def gAnimal_CompressTableUnderLock(): 

    MasterLock('lock') 

    _gFarm_Index = [] 
    _Type = [] 
    _Name = [] 
    _RowStatus = [] 

    for tableIndex in range(len(gAnimal_RowStatus)): 
        if gAnimal_RowStatus[tableIndex] is not None: 
            _gFarm_Index.append(gAnimal_gFarm_Index[tableIndex]) 
            _Type.append(gAnimal_Type[tableIndex]) 
            _Name.append(gAnimal_Name[tableIndex]) 
            _RowStatus.append(gAnimal_RowStatus[tableIndex]) 

    del gAnimal_gFarm_Index[:] 
    del gAnimal_Type[:] 
    del gAnimal_Name[:] 
    del gAnimal_RowStatus[:] 

    for tableIndex in range(len(_RowStatus)): 
        gAnimal_gFarm_Index.append(_gFarm_Index[tableIndex]) 
        gAnimal_Type.append(_Type[tableIndex]) 
        gAnimal_Name.append(_Name[tableIndex]) 
        gAnimal_RowStatus.append(_RowStatus[tableIndex]) 

    MasterLock('unlock') 

    return 

# 
# Print values out for table 'gCounty' (using locker = None) 
# 
def gCounty_DumpTable(rangeListToDump = None): 

    print (f'**************') 
    print (f'**************') 
    print ('    Table %24s (using locker = None) has %d entries' % ('gCounty', len(gCounty_Name))) 
    print (f'**************') 
    print (f'**************') 
    print (f'') 

    for i in range (0, len(gCounty_Name)): 
        if (rangeListToDump is None) or (i in rangeListToDump): 
            print ('    Row index = %d' % (i)) 
            print ('    %30s = %10s' % ('gCounty_Name', gCounty_Name[i])) 

    return 

# 
# Print values out for table 'gFarm' (using locker = MasterLock) 
# 
def gFarm_DumpTable(rangeListToDump = None): 

    MasterLock('lock') 

    print (f'**************') 
    print (f'**************') 
    print ('    Table %24s (using locker = MasterLock) has %d entries' % ('gFarm', len(gFarm_Name))) 
    print (f'**************') 
    print (f'**************') 
    print (f'') 

    for i in range (0, len(gFarm_Name)): 
        if (rangeListToDump is None) or (i in rangeListToDump): 
            print ('    Row index = %d' % (i)) 
            print ('    %30s = %10s' % ('gFarm_Name', gFarm_Name[i])) 
            print ('    %30s = %10s  (%30s)' % ('gFarm_gCounty_Index', gFarm_gCounty_Index[i], gCounty_Name[gFarm_gCounty_Index[i]])) 
            print ('    %30s = %10s' % ('gFarm_RowStatus', gFarm_RowStatus[i])) 

    MasterLock('unlock') 

    return 

# 
# Print values out for table 'gAnimal' (using locker = MasterLock) 
# 
def gAnimal_DumpTable(rangeListToDump = None): 

    MasterLock('lock') 

    print (f'**************') 
    print (f'**************') 
    print ('    Table %24s (using locker = MasterLock) has %d entries' % ('gAnimal', len(gAnimal_Name))) 
    print (f'**************') 
    print (f'**************') 
    print (f'') 

    for i in range (0, len(gAnimal_Name)): 
        if (rangeListToDump is None) or (i in rangeListToDump): 
            print ('    Row index = %d' % (i)) 
            print ('    %30s = %10s  (%30s)' % ('gAnimal_gFarm_Index', gAnimal_gFarm_Index[i], gFarm_Name[gAnimal_gFarm_Index[i]])) 
            print ('    %30s = %10s' % ('gAnimal_Type', gAnimal_Type[i])) 
            print ('    %30s = %10s' % ('gAnimal_Name', gAnimal_Name[i])) 
            print ('    %30s = %10s' % ('gAnimal_RowStatus', gAnimal_RowStatus[i])) 

    MasterLock('unlock') 

    return 
